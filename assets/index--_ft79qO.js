var E=Object.defineProperty,Y=Object.defineProperties;var D=Object.getOwnPropertyDescriptors;var N=Object.getOwnPropertySymbols;var T=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable;var b=(c,o,l)=>o in c?E(c,o,{enumerable:!0,configurable:!0,writable:!0,value:l}):c[o]=l,p=(c,o)=>{for(var l in o||(o={}))T.call(o,l)&&b(c,l,o[l]);if(N)for(var l of N(o))z.call(o,l)&&b(c,l,o[l]);return c},u=(c,o)=>Y(c,D(o));import{j as s,w as K,x as q}from"./index-BaAvzZ0N.js";import{u as H,r as g}from"./router-vendor-K3Txs3ma.js";import{u as J,G as Q}from"./useWelcomeModal-kDNlHZm9.js";import{u as U}from"./useDailySeed-BCululcd.js";import{M as X}from"./Modal-DaxzLE-o.js";import"./react-vendor-C0DUGSOM.js";import"./helmet-vendor-DAr0CUAT.js";import"./index-C9qaKABp.js";const Z="_container_1ekxj_1",ee="_gameContainer_1ekxj_85",se="_grid_1ekxj_103",ae="_card_1ekxj_121",te="_cardInner_1ekxj_157",ne="_flipped_1ekxj_177",re="_cardFront_1ekxj_185",le="_cardBack_1ekxj_187",oe="_matched_1ekxj_241",ce="_controls_1ekxj_253",ie="_resetBtn_1ekxj_279",de="_moves_1ekxj_339",me="_pairs_1ekxj_341",he="_stats_1ekxj_359",pe="_stat_1ekxj_359",ue="_statValue_1ekxj_387",xe="_statLabel_1ekxj_401",Me="_playAgainBtn_1ekxj_415",ve="_closeBtn_1ekxj_451",a={container:Z,gameContainer:ee,grid:se,card:ae,cardInner:te,flipped:ne,cardFront:re,cardBack:le,matched:oe,controls:ce,resetBtn:ie,moves:de,pairs:me,stats:he,stat:pe,statValue:ue,statLabel:xe,playAgainBtn:Me,closeBtn:ve},P={cards:[],flippedCards:[],matchedPairs:[],gameOver:!1,gameWon:!1,maxMoves:30,currentMoves:0,gridSize:4,totalPairs:8},S=["ðŸŽ®","ðŸŽ²","ðŸŽ¯","ðŸŽª","ðŸŽ¨","ðŸŽ­","ðŸŽª","ðŸŽ¯","ðŸŽ²","ðŸŽ®","ðŸŽ¨","ðŸŽ­","ðŸŽª","ðŸŽ¯","ðŸŽ²","ðŸŽ®"],B=["Memory Master!","Card Champion!","Match Maker!","Recall Royalty!","Memory Wizard!","Pair Pro!","Match Master!","Memory Ace!"];function L(c){const o=(()=>{let r=c;return()=>(r=(r*9301+49297)%233280,r/233280)})(),l=[];for(let r=0;r<8;r++)l.push(S[r],S[r]);const e=[...l];for(let r=e.length-1;r>0;r--){const M=Math.floor(o()*(r+1));[e[r],e[M]]=[e[M],e[r]]}return e.map((r,M)=>({id:M,symbol:r,isFlipped:!1,isMatched:!1}))}const Pe=({instructions:c})=>{const o=H(),l=U(),[e,r]=g.useState(P),[M,F]=g.useState(""),[W,_]=g.useState(!1),[d,$]=g.useState({}),{WelcomeModal:O}=J("Memoryle",c);g.useEffect(()=>{if(l!==null){const t=L(l);r(n=>u(p({},n),{cards:t}))}},[l]);const k=t=>{if(e.gameOver||e.flippedCards.length>=2)return;const n=e.cards.find(i=>i.id===t);if(!n||n.isFlipped||n.isMatched)return;const h=e.cards.map(i=>i.id===t?u(p({},i),{isFlipped:!0}):i),x=[...e.flippedCards,t];r(i=>u(p({},i),{cards:h,flippedCards:x})),x.length===2&&setTimeout(()=>{w(x)},1e3)},w=t=>{const[n,h]=t.map(m=>e.cards.find(V=>V.id===m)),x=n.symbol===h.symbol,i=e.currentMoves+1;let v=[...e.cards],j=[...e.matchedPairs];x?(v=v.map(m=>t.includes(m.id)?u(p({},m),{isMatched:!0}):m),j.push(n.symbol)):v=v.map(m=>t.includes(m.id)?u(p({},m),{isFlipped:!1}):m);const f=j.length===e.totalPairs,C=f||i>=e.maxMoves;r(m=>u(p({},m),{cards:v,flippedCards:[],matchedPairs:j,currentMoves:i,gameOver:C,gameWon:f})),C&&G(f)},A=t=>{if(e.gameOver||e.flippedCards.length>=2)return;const h={1:0,2:1,3:2,4:3,5:4,6:5,7:6,8:7,9:8,0:9,q:10,w:11,e:12,r:13,t:14,y:15}[t.key.toLowerCase()];h!==void 0&&h<e.cards.length&&k(h)},G=t=>{const n=K(),h=u(p({},n),{gamesPlayed:n.gamesPlayed+1,gamesWon:n.gamesWon+(t?1:0),currentStreak:t?n.currentStreak+1:0,maxStreak:t?Math.max(n.maxStreak,n.currentStreak+1):n.maxStreak,totalMoves:n.totalMoves+e.currentMoves,bestMoves:t?Math.min(n.bestMoves||1/0,e.currentMoves):n.bestMoves});q(h);const x=B[Math.floor(Math.random()*B.length)],i=t?`You found all pairs in ${e.currentMoves} moves!`:`Game over. You found ${e.matchedPairs.length} pairs in ${e.currentMoves} moves.`;$({title:t?x:"Game Over",message:i,stats:h}),_(!0)},y=()=>{_(!1),o("/")},I=()=>{_(!1),r(P),F("")},R=()=>{if(l!==null){const t=L(l);r(n=>u(p({},n),{cards:t,flippedCards:[],matchedPairs:[],currentMoves:0,gameOver:!1,gameWon:!1}))}};return s.jsxs(Q,{children:[s.jsxs("div",{className:a.container,onKeyDown:A,tabIndex:0,role:"application","aria-label":"Memoryle game","aria-live":"polite","aria-atomic":"true",children:[s.jsx("div",{className:"sr-only","aria-live":"polite",children:e.gameOver?e.gameWon?"Congratulations! You found all pairs!":`Game over. You found ${e.matchedPairs.length} pairs.`:`Moves: ${e.currentMoves} of ${e.maxMoves}, ${e.matchedPairs.length} pairs found`}),s.jsx("div",{className:a.gameContainer,children:s.jsx("div",{className:a.grid,role:"grid","aria-label":"Memory card grid",children:e.cards.map((t,n)=>s.jsx("div",{className:`${a.card} ${t.isFlipped||t.isMatched?a.flipped:""} ${t.isMatched?a.matched:""}`,onClick:()=>k(t.id),role:"gridcell","aria-label":`Card ${n+1}, ${t.isFlipped||t.isMatched?t.symbol:"hidden"}`,tabIndex:0,children:s.jsxs("div",{className:a.cardInner,children:[s.jsx("div",{className:a.cardFront,children:"?"}),s.jsx("div",{className:a.cardBack,children:t.symbol})]})},t.id))})}),s.jsxs("div",{className:a.controls,children:[s.jsx("button",{className:a.resetBtn,onClick:R,disabled:e.gameOver,"aria-label":"Reset game",tabIndex:0,children:"Reset"}),s.jsxs("div",{className:a.moves,children:["Moves: ",e.currentMoves,"/",e.maxMoves]}),s.jsxs("div",{className:a.pairs,children:["Pairs: ",e.matchedPairs.length,"/",e.totalPairs]})]})]}),s.jsxs(X,{open:W,onClose:y,title:d.title,children:[s.jsx("p",{children:d.message}),d.stats&&s.jsxs("div",{className:a.stats,children:[s.jsxs("div",{className:a.stat,children:[s.jsx("span",{className:a.statValue,children:d.stats.gamesPlayed}),s.jsx("span",{className:a.statLabel,children:"Games"})]}),s.jsxs("div",{className:a.stat,children:[s.jsxs("span",{className:a.statValue,children:[d.stats.gamesPlayed>0?Math.round(d.stats.gamesWon/d.stats.gamesPlayed*100):0,"%"]}),s.jsx("span",{className:a.statLabel,children:"Win Rate"})]}),s.jsxs("div",{className:a.stat,children:[s.jsx("span",{className:a.statValue,children:d.stats.currentStreak}),s.jsx("span",{className:a.statLabel,children:"Current Streak"})]}),s.jsxs("div",{className:a.stat,children:[s.jsx("span",{className:a.statValue,children:d.stats.maxStreak}),s.jsx("span",{className:a.statLabel,children:"Max Streak"})]}),d.stats.bestMoves&&s.jsxs("div",{className:a.stat,children:[s.jsx("span",{className:a.statValue,children:d.stats.bestMoves}),s.jsx("span",{className:a.statLabel,children:"Best Moves"})]})]}),s.jsxs("div",{slot:"buttons",children:[s.jsx("button",{onClick:I,className:a.playAgainBtn,children:"Play Again"}),s.jsx("button",{onClick:y,className:a.closeBtn,children:"Close"})]})]}),s.jsx(O,{})]})};export{Pe as default};
